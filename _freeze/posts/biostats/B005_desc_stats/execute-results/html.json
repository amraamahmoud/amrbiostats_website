{
  "hash": "dc5fc92ead91a8070d17685f4618904c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Quantile algorithms\"\nimage: \"/images/biostats.png\"\ndate: \"2024-10-20\"\nformat: \n  html: \n    fig-align: center\n    page-layout: article\n    toc: true\n    toc-depth: 5\n    toc-expand: true\n    lightbox: false\ncrossref: \n  custom: \n    - kind: float\n      reference-prefix: \"Example M.10.\"\n      key: tabset\n      space-before-numbering: false\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n## Steps to calculate quantiles in R\n\n-   The help of the `quantile()` function in R describes the different algorithms used to calculate quantiles. However, I find the details very technical and not easy to understand for casual readers.\n\n-   Therefore, I tried to simplify the algorithms as discussed below.\n\n-   R provides **nine** algorithms to calculate the quantiles, which can be specified using the `type` argument:\n\n    -   Types $1-3$ are used for discontinuous data, while types $4-9$ are used for continuous data.\n\n    -   Type $1$ and $3$ are used for class \"Date\" and for ordered factors.\n\n    -   Type $7$ is the default method for continuous data in R.\n\n    -   Type $6$ is used to get results similar to `SPSS`, `Minitab`, or `Graphpad Prism`.\n\n-   Let $n$ be the number of observations in the dataset.\n\n-   Let $p$ a number between $0$ and $1$, where $(p \\times 100)\\%$ is the quantile to be calculated, denote by $Q_p$.\n\n-   The first step is to calculate the product $np$.\n\n-   Next, calculate the $j^{th}$ rank and $Q_p$ as follows:\n\n    +-------------+---------------------------------------------------------------------------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------+\n    | Algorithm   | [$j$]{style=\"color: #0466c8;\"}                                            | [Condition]{style=\"color: darkgreen;\"}                                   | [Quantile $(Q_p)$]{style=\"color: #ba181b;\"}                                   |\n    +:===========:+:=========================================================================:+:========================================================================:+:=============================================================================:+\n    | $1$         | [$\\lfloor np \\rfloor$]{style=\"color: #0466c8;\"}                           | $np = j$                                                                 | [$x_j$]{style=\"color: #ba181b;\"}                                              |\n    |             |                                                                           |                                                                          |                                                                               |\n    |             |                                                                           | $np \\ne j$                                                               | [$x_{j+1}$]{style=\"color: #ba181b;\"}                                          |\n    +-------------+---------------------------------------------------------------------------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------+\n    | $2$         | [$\\lfloor np \\rfloor$]{style=\"color: #0466c8;\"}                           | $np = j$                                                                 | [$\\frac{1}{2}(x_j + x_{j+1})$]{style=\"color: #ba181b;\"}                       |\n    |             |                                                                           |                                                                          |                                                                               |\n    |             |                                                                           | $np \\ne j$                                                               | [$x_{j+1}$]{style=\"color: #ba181b;\"}                                          |\n    +-------------+---------------------------------------------------------------------------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------+\n    | $3$         | [$\\lfloor np - \\large \\frac{1}{2}\\rfloor$]{style=\"color: #0466c8;\"}       | $np = j + \\frac{1}{2}$ and $j$ even                                      | $x_j$                                                                         |\n    |             |                                                                           |                                                                          |                                                                               |\n    |             |                                                                           | $np \\ne j+ \\frac{1}{2}$                                                  | $x_{j+1}$                                                                     |\n    +-------------+---------------------------------------------------------------------------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------+\n    | $4$         | [$\\lfloor np \\rfloor$]{style=\"color: #0466c8;\"}                           | ------------------------------------------------------------------------ | [$x_j + (x_{j+1} - x_j)(np-j)$]{style=\"color: #ba181b;\"}                      |\n    +-------------+---------------------------------------------------------------------------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------+\n    | $5$         | [$\\lfloor np + \\large \\frac{1}{2}\\rfloor$]{style=\"color: #0466c8;\"}       | ------------------------------------------------------------------------ | [$x_j + (x_{j+1} - x_j)(np-j + \\frac{1}{2})$]{style=\"color: #ba181b;\"}        |\n    +-------------+---------------------------------------------------------------------------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------+\n    | $6$         | [$\\lfloor np + p \\rfloor$]{style=\"color: #0466c8;\"}                       | ------------------------------------------------------------------------ | [$x_j + (x_{j+1} - x_j)(np-j +p)$]{style=\"color: #ba181b;\"}                   |\n    +-------------+---------------------------------------------------------------------------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------+\n    | $7$         | [$\\lfloor np -p +1 \\rfloor$]{style=\"color: #0466c8;\"}                     | ------------------------------------------------------------------------ | [$x_j + (x_{j+1} - x_j)(np -j - p + 1)$]{style=\"color: #ba181b;\"}             |\n    +-------------+---------------------------------------------------------------------------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------+\n    | $8$         | [$\\lfloor np + \\large \\frac{(p+1)}{3} \\rfloor$]{style=\"color: #0466c8;\"}  | ------------------------------------------------------------------------ | [$x_j + (x_{j+1} - x_j)(np - j + \\frac{(p+1)}{3})$]{style=\"color: #ba181b;\"}  |\n    +-------------+---------------------------------------------------------------------------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------+\n    | $9$         | [$\\lfloor np + \\large \\frac{(2p+3)}{8} \\rfloor$]{style=\"color: #0466c8;\"} | ------------------------------------------------------------------------ | [$x_j + (x_{j+1} - x_j)(np - j + \\frac{(2p+3)}{8})$]{style=\"color: #ba181b;\"} |\n    +-------------+---------------------------------------------------------------------------+--------------------------------------------------------------------------+-------------------------------------------------------------------------------+\n\n    -   The symbol $\\lfloor x \\rfloor$ reads as the floor of $x$. This function returns the largest **integer** not greater than $x$ (i.e., **rounds down** $x$ to the nearest integer). For example, $\\lfloor 3.9 \\rfloor = 3$.\n\n    -   $x_j$ and $x_{j+1}$ are the $j^{th}$ and $(j+1)^{th}$ order statistics, respectively (i.e., the observations having the rank $j$ and $j+1$ in the ordered array of the observations).\n\n-   Let's illustrate the above algorithms with some examples.\n\n-   [Example $1$ (ordered factor):]{style=\"color: #ba181b;\"} consider the following set of observations pertaining to the pain severity ($1$: mild, $2$: moderate, $3$: severe) of $10$ patients: $1, 1, 1, 2, 2, 3, 3, 3, 3, 3$. The $50^{th}\\ (Q_{0.5})$ and $75^{th}\\ (Q_{0.75})$ quantiles can be calculated using algorithms $1-3$ as follows:\n\n::: panel-tabset\n## Algorithm 1\n\n-   $\\small 50^{th}$ Quantile:\n\n    -   $\\small p = 0.5$, $\\small np = 10 \\times 0.5 = 5$, and $\\small j =  \\lfloor np \\rfloor = \\lfloor 5 \\rfloor = 5$\n\n    -   Since $\\small np = \\lfloor np \\rfloor$, then $\\small Q_{0.5} = x_j = x_5$ (the observation having the rank $\\small 5$ in the ordered array), which has the value $\\small 2$\n\n-   $\\small 75^{th}$ Quantile:\n\n    -   $\\small p = 0.75$, $\\small np = 10 \\times 0.75 = 7.5$, and $\\small j =  \\lfloor np \\rfloor = \\lfloor 7.5 \\rfloor = 7$\n\n    -   Since $\\small np \\ne \\lfloor np \\rfloor$, then $\\small Q_{0.75} = x_{j+1} = x_8$ (the observation having the rank $\\small 8$ in the ordered array), which has the value $\\small 3$\n\n-   Check the result using the `quantile()` function in R:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    x <- c(1, 1, 1, 2, 3, 3, 3, 3, 3, 3)\n       quantile(\n     x, \n     probs = c(0.5, 0.75), \n     type = 1\n       )\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    50% 75% \n      3   3 \n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n## Algorithm 2\n\n-   $\\small 50^{th}$ Quantile:\n\n    -   $\\small p = 0.5$, $\\small np = 10 \\times 0.5 = 5$, and $\\small j =  \\lfloor np \\rfloor = \\lfloor 5 \\rfloor = 5$\n\n    -   Since $\\small np = \\lfloor np \\rfloor$, then $\\small Q_{0.5} = \\frac{1}{2}(x_j + x_{j+1}) =$ $\\small \\frac{1}{2}(x_5 + x_6) = \\frac{1}{2}(2 + 3) = 2.5$\n\n-   $\\small 75^{th}$ Quantile:\n\n    -   $\\small p = 0.75$, $\\small np = 10 \\times 0.75 = 7.5$, $\\small j =  \\lfloor np \\rfloor = \\lfloor 7.5 \\rfloor = 7$\n\n    -   Since $\\small np \\ne \\lfloor np \\rfloor$, then $\\small Q_{0.75} =  x_{j+1} = x_8 = 3$\n\n-   Check the result using the `quantile()` function in R:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    quantile(\n      x, \n      probs = c(0.5, 0.75), \n      type = 2\n    )\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    50% 75% \n      3   3 \n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n## Algorithm 3\n\n-   $\\small 50^{th}$ Quantile:\n\n    -   $\\small p = 0.5$, $\\small np = 10 \\times 0.5 = 5$, and $\\small j =  \\lfloor np - 0.5 \\rfloor = \\lfloor 5 - 0.5 \\rfloor = 4$\n\n    -   Since $\\small np \\ne \\lfloor np - 0.5 \\rfloor$, then $\\small Q_{0.5} = x_j = x_4 = 2$\n\n-   $\\small 75^{th}$ Quantile:\n\n    -   $\\small p = 0.75$, $\\small np = 10 \\times 0.75 = 7.5$, and $\\small j =  \\lfloor np - 0.5 \\rfloor = \\lfloor 7.5 - 0.5 \\rfloor = 7$\n\n    -   Since $\\small np = \\lfloor np + 0.5 \\rfloor$, then $\\small Q_{0.75} = x_{j+1} = x_8 = 3$\n\n-   Check the result using the `quantile()` function in R:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    quantile(\n      x, \n      probs = c(0.5, 0.75), \n      type = 3\n    )\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    50% 75% \n      3   3 \n    ```\n    \n    \n    :::\n    :::\n\n\n\n:::\n\n-   [Example $2$ (continuous data):]{style=\"color: #ba181b;\"} consider the following ordered set of observations: $(10.2,\\ 10.4,\\ 11.6,\\ 12.3,\\ 13.2,\\ 14.7,\\ 15.4,\\ 16.1)$. The $25^{th}\\ (Q_{0.25})$ and $75^{th}\\ (Q_{0.75})$ quantiles can be calculated using algorithms $4-9$ as follows:\n\n::: panel-tabset\n## Algorithm 4\n\n-   $25^{th}$ Quantile:\n\n    -   $p = 0.25$\n\n    -   $np = 8 \\times 0.25 = 2$\n\n    -   $j =  \\lfloor np \\rfloor = \\lfloor 2 \\rfloor = 2$\n\n    -   $Q_{0.25} = x_j + (x_{j+1} - x_j)(np - j) = x_2 + (x_3 - x_2)(2 - 2) = 10.4$.\n\n-   $75^{th}$ Quantile:\n\n    -   $p = 0.75$\n\n    -   $np = 8 \\times 0.75 = 6$\n\n    -   $j =  \\lfloor np \\rfloor = \\lfloor 6 \\rfloor = 6$\n\n    -   $Q_{0.75} = x_j + (x_{j+1} - x_j)(np - j) = x_6 + (x_7 - x_6)(6 - 6) = 14.7$.\n\n-   Check the result using the `quantile()` function in R:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    y <- c(10.2, 10.4, 11.6, 12.3, 13.2, 14.7, 15.4, 16.1)\n    quantile(\n      y, \n      probs = c(0.25, 0.75), \n      type = 4\n    )\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n     25%  75% \n    10.4 14.7 \n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n## Algorithm 5\n\n-   $25^{th}$ Quantile:\n\n    -   $p = 0.25$\n\n    -   $np = 8 \\times 0.25 = 2$\n\n    -   $j =  \\lfloor np + 0.5 \\rfloor = \\lfloor 2.5 \\rfloor = 2$\n\n    -   $Q_{0.25} = x_j + (x_{j+1} - x_j)(np - j + 0.5) = x_2 + (x_3 - x_2)(2 - 2 + 0.5) = 10.4 + (11.6 - 10.4) \\times 0.5 = 11$.\n\n-   $75^{th}$ Quantile:\n\n    -   $p = 0.75$\n\n    -   $np = 8 \\times 0.75 = 6$\n\n    -   $j =  \\lfloor np + 0.5 \\rfloor = \\lfloor 6.5 \\rfloor = 6$\n\n    -   $Q_{0.75} = x_j + (x_{j+1} - x_j)(np - j + 0.5) = x_6 + (x_7 - x_6)(6 - 6 + 0.5) = 14.7 + (15.4 - 14.7) \\times 0.5 = 15.05$.\n\n-   Check the result using the `quantile()` function in R:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    quantile(\n      y, \n      probs = c(0.25, 0.75), \n      type = 5\n    )\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n      25%   75% \n    11.00 15.05 \n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n## Algorithm 6\n\n+-------------------------------------------------------+-------------------------------------------------------+\n| $25^{th}$ Quantile                                    | $75^{th}$ Quantile                                    |\n+=======================================================+=======================================================+\n| $p = 0.25$                                            | $p = 0.75$                                            |\n+-------------------------------------------------------+-------------------------------------------------------+\n| $np = 8 \\times 0.25 = 2$                              | $np = 8 \\times 0.75 = 6$                              |\n+-------------------------------------------------------+-------------------------------------------------------+\n| $j =\\lfloor np + p \\rfloor =$                         | $j =\\lfloor np + p \\rfloor =$                         |\n|                                                       |                                                       |\n| $\\lfloor 2 + 0.25 \\rfloor = \\lfloor 2.25 \\rfloor = 2$ | $\\lfloor 6 + 0.25 \\rfloor = \\lfloor 6.25 \\rfloor = 6$ |\n+-------------------------------------------------------+-------------------------------------------------------+\n| $Q_{0.25} = x_j + (x_{j+1} - x_j)(np - j + p) =$      | $Q_{0.75} = x_j + (x_{j+1} - x_j)(np - j + p) =$      |\n|                                                       |                                                       |\n| $x_2 + (x_3 - x_2)(2 - 2 + 0.25) =$                   | $x_6 + (x_7 - x_6)(6 - 6 + 0.75) =$                   |\n|                                                       |                                                       |\n| $10.4 + (11.6 - 10.4) \\times 0.25 = 10.7$             | $14.7 + (15.4 - 14.7) \\times 0.75 = 15.225$           |\n+-------------------------------------------------------+-------------------------------------------------------+\n\n-   Check the result using the `quantile()` function in R:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    quantile(\n      y, \n      probs = c(0.25, 0.75), \n      type = 6\n    )\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n       25%    75% \n    10.700 15.225 \n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n## Algorithm 7\n\n+-----------------------------------------------------------+-----------------------------------------------------------+\n| $25^{th}$ Quantile                                        | $75^{th}$ Quantile                                        |\n+===========================================================+===========================================================+\n| $p = 0.25$                                                | $p = 0.75$                                                |\n+-----------------------------------------------------------+-----------------------------------------------------------+\n| $np = 8 \\times 0.25 = 2$                                  | $np = 8 \\times 0.75 = 6$                                  |\n+-----------------------------------------------------------+-----------------------------------------------------------+\n| $j =\\lfloor np - p + 1 \\rfloor =$                         | $j =\\lfloor np - p + 1 \\rfloor =$                         |\n|                                                           |                                                           |\n| $\\lfloor 2 - 0.25 + 1 \\rfloor = \\lfloor 2.75 \\rfloor = 2$ | $\\lfloor 6 - 0.25 + 1 \\rfloor = \\lfloor 6.75 \\rfloor = 6$ |\n+-----------------------------------------------------------+-----------------------------------------------------------+\n| $Q_{0.25} = x_j + (x_{j+1} - x_j)(np - j - p + 1) =$      | $Q_{0.75} = x_j + (x_{j+1} - x_j)(np - j - p + 1) =$      |\n|                                                           |                                                           |\n| $x_2 + (x_3 - x_2)(2 - 2 - 0.25 + 1) =$                   | $x_6 + (x_7 - x_6)(6 - 6 - 0.75 + 1) =$                   |\n|                                                           |                                                           |\n| $10.4 + (11.6 - 10.4) \\times 0.75 = 11.3$                 | $14.7 + (15.4 - 14.7) \\times 0.25 = 14.875$               |\n+-----------------------------------------------------------+-----------------------------------------------------------+\n\n-   Check the result using the `quantile()` function in R:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    quantile(\n      y, \n      probs = c(0.25, 0.75), \n      type = 7\n    )\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n       25%    75% \n    11.300 14.875 \n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n## Algorithm 8\n\n+--------------------------------------------------------------------------------+--------------------------------------------------------------------------------+\n| $25^{th}$ Quantile                                                             | $75^{th}$ Quantile                                                             |\n+================================================================================+================================================================================+\n| $p = 0.25$                                                                     | $p = 0.75$                                                                     |\n+--------------------------------------------------------------------------------+--------------------------------------------------------------------------------+\n| $np = 8 \\times 0.25 = 2$                                                       | $np = 8 \\times 0.75 = 6$                                                       |\n+--------------------------------------------------------------------------------+--------------------------------------------------------------------------------+\n| $j =\\lfloor np + \\large \\frac{(p+1)}{3} \\rfloor =$                             | $j =\\lfloor np + \\large \\frac{(p+1)}{3} \\rfloor =$                             |\n|                                                                                |                                                                                |\n| $\\lfloor 2 + \\large \\frac{(0.25+1)}{3}  \\rfloor =$ $\\lfloor 2.417 \\rfloor = 2$ | $\\lfloor 6 + \\large \\frac{(0.75+1)}{3}  \\rfloor =$ $\\lfloor 6.583 \\rfloor = 6$ |\n+--------------------------------------------------------------------------------+--------------------------------------------------------------------------------+\n| $Q_{0.25} = x_j + (x_{j+1} - x_j)(np - j + \\large \\frac{(p+1)}{3}) =$          | $Q_{0.75} = x_j + (x_{j+1} - x_j)(np - j + \\large \\frac{(p+1)}{3}) =$          |\n|                                                                                |                                                                                |\n| $x_2 + (x_3 - x_2)(2 - 2 + 0.41667) =$                                         | $x_6 + (x_7 - x_6)(6 - 6 + 0.58333) =$                                         |\n|                                                                                |                                                                                |\n| $10.4 + (11.6 - 10.4) \\times 0.41667 = 10.9$                                   | $14.7 + (15.4 - 14.7) \\times 0.58333 = 15.10833$                               |\n+--------------------------------------------------------------------------------+--------------------------------------------------------------------------------+\n\n-   Check the result using the `quantile()` function in R:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    quantile(\n      y, \n      probs = c(0.25, 0.75), \n      type = 8\n    )\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n         25%      75% \n    10.90000 15.10833 \n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n    ## Algorithm 9\n\n+--------------------------------------------------------------------------------+--------------------------------------------------------------------------------+\n| $25^{th}$ Quantile                                                             | $75^{th}$ Quantile                                                             |\n+================================================================================+================================================================================+\n| $p = 0.25$                                                                     | $p = 0.75$                                                                     |\n+--------------------------------------------------------------------------------+--------------------------------------------------------------------------------+\n| $np = 8 \\times 0.25 = 2$                                                       | $np = 8 \\times 0.75 = 6$                                                       |\n+--------------------------------------------------------------------------------+--------------------------------------------------------------------------------+\n| $j =\\lfloor np + \\large \\frac{(2p+31)}{8} \\rfloor =$                           | $j =\\lfloor np + \\large \\frac{(2p+3)}{8} \\rfloor =$                            |\n|                                                                                |                                                                                |\n| $\\lfloor 2 + \\large \\frac{(0.5+3)}{8}  \\rfloor =$ $\\lfloor 2.4375 \\rfloor = 2$ | $\\lfloor 6 + \\large \\frac{(1.5+3)}{8}  \\rfloor =$ $\\lfloor 6.5625 \\rfloor = 6$ |\n+--------------------------------------------------------------------------------+--------------------------------------------------------------------------------+\n| $Q_{0.25} = x_j + (x_{j+1} - x_j)(np - j + \\large \\frac{(2p+3)}{8}) =$         | $Q_{0.75} = x_j + (x_{j+1} - x_j)(np - j + \\large \\frac{(2p+3)}{8}) =$         |\n|                                                                                |                                                                                |\n| $x_2 + (x_3 - x_2)(2 - 2 + 0.4375) =$                                          | $x_6 + (x_7 - x_6)(6 - 6 + 0.5625) =$                                          |\n|                                                                                |                                                                                |\n| $10.4 + (11.6 - 10.4) \\times 0.4375 = 10.925$                                  | $14.7 + (15.4 - 14.7) \\times 0.5625 = 15.09375$                                |\n+--------------------------------------------------------------------------------+--------------------------------------------------------------------------------+\n\n-   Check the result using the `quantile()` function in R:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    quantile(\n      y, \n      probs = c(0.25, 0.75), \n      type = 9\n    )\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n         25%      75% \n    10.92500 15.09375 \n    ```\n    \n    \n    :::\n    :::\n\n\n\n:::\n\n## References\n\n-   Chen, Y. (2017). Lecture 7: Density Estimation. University of Washington. Retrieved October 05, 2024, from https://faculty.washington.edu/yenchic/17Sp_403/Lec7-density.pdf\n\n-   Daniel, W. W. and Cross, C. L. (2013). Biostatistics: A Foundation for Analysis in the Health Sciences, Tenth edition. Wiley\n\n-   Heumann, C., Schomaker, M., and Shalabh (2022). Introduction to Statistics and Data Analysis: With Exercises, Solutions and Applications in R. Springer\n\n-   Lane, D. M. et al., (2019). Introduction to Statistics. Online Edition. Retrieved September 14, 2024, from https://openstax.org/details/introduction-statistics\n\n<br>\n\n## Add your comments\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}