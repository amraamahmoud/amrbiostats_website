{
  "hash": "d2f9dfef6b050785bf87593f580c9253",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Combinatorics\"\nimage: \"/images/biostats.jpg\"\ndate: \"2024-12-15\"\nformat: \n  html: \n    fig-align: center\n    page-layout: article\n    toc: true\n    toc-depth: 5\n    toc-expand: true\n    lightbox: false\nfilters: \n  - highlight-text\ncrossref: \n  custom: \n    - kind: float\n      reference-prefix: \"Example M.10.\"\n      key: tabset\n      space-before-numbering: false\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n:::\n\n\n\n\n## Background\n\n-   In the previous section, we discussed the classical approach to assign probabilities to events, where counting the number of favorable outcomes and the total number of outcomes is crucial.\n\n-   When the number of outcomes is small, counting is straightforward, however, when the number of outcomes is large, counting can be challenging and tedious.\n\n-   Therefore, we use combinatorics to provide a systematic way for counting.\n\n-   **Combinatorics** is the branch of mathematics that deals with counting, arranging, and combining objects within finite sets.\n\n## Motivational example\n\n-   Suppose that we have a set of four colored balls in a box: two [red]{fg=\"white\" bg=\"red\"} balls $(R_1, R_2)$, one [blue]{fg=\"white\" bg=\"#0171c3\"} ball $(B)$, and one [green]{fg=\"white\" bg=\"green\"} ball $(G)$.\n\n-   If we want to draw two balls from the box, then in how many different ways can we do this?\n\n-   After drawing the first ball and before drawing the second ball, an important question to ask is whether we should put the first ball back in the box or not:\n\n    -   If we decide to put it back, then it is said that we draw **with replacement** (the first ball is availlable again for the next draw).\n\n    -   If we decide not to put it back, then it is said that we draw **without replacement** (the first ball is not availlable for the next draw).\n\n-   If we draw without replacement, then there are $12$ ways to draw two balls as follows:\n\n    |                 |               |                |\n    |-----------------|---------------|----------------|\n    | $1.$ $R_1, R_2$ | $5.$ $R_2, B$ | $9$. $B, G$    |\n    | $2.$ $R_1, B$   | $6.$ $R_2, G$ | $10.$ $G, R_1$ |\n    | $3.$ $R_1, G$   | $7.$ $B, R_1$ | $11.$ $G, R_2$ |\n    | $4.$ $R_2, R_1$ | $8.$ $B, R_2$ | $12.$ $G, B$   |\n\n-   A second question to ask is whether the order of the balls matters or not:\n\n    [{{< iconify bi:1-circle-fill size=20px fill=blue >}}]{style=\"color: dodgerblue\"} **If the order matters**:\n\n    -   The combination of $(G, B)$, for example, is different from the combination of $(B, G)$.\n\n    -   Considering the order, there are $12$ ways to draw two balls without replacement as shown above.\n\n    [{{< iconify bi:2-circle-fill size=20px fill=blue >}}]{style=\"color: dodgerblue\"} **If the order does not matter**:\n\n    -   The combination of $(G, B)$ is the same as the combination of $(B, G)$ as both result in a draw of one green and one blue ball.\n\n    -   Without considering the order, there are only $6$ ways to draw two balls without replacement as shown below (the duplicates are struck through, while distinct combinations are highlighted):\n\n    |  |  |  |\n    |-------------------------|-------------------|----------------------------|\n    | [$1.$ $R_1, R_2$]{bg-colour=\"#bde0fe\"} | [$5.$ $R_2, B$]{bg-colour=\"#bde0fe\"} | [$9$. $B, G$]{bg-colour=\"#bde0fe\"} |\n    | [$2.$ $R_1, B$]{bg-colour=\"#bde0fe\"} | [$6.$ $R_2, G$]{bg-colour=\"#bde0fe\"} | $10.$ $\\cancel{G, R_1}$ |\n    | [$3.$ $R_1, G$]{bg-colour=\"#bde0fe\"} | $7.$ $\\cancel{B, R_1}$ | $11.$ $\\cancel{G, R_2}$ |\n    | $4.$ $\\cancel{R_2, R_1}$ | $8.$ $\\cancel{B, R_2}$ | $12.$ $\\cancel{G, B}$ |\n\n    [{{< iconify bi:3-circle-fill size=20px fill=blue >}}]{style=\"color: dodgerblue\"} If the order does not matters and similar items are indistinguishable (i.e., the two red balls are indistinguishable making no sense of denoting the two balls as $R_1$ and $R_2$):\n\n    -   In this case, there are $4$ ways to draw the two balls as shown below:\n\n    |             |             |             |             |\n    |-------------|-------------|-------------|-------------|\n    | $1.$ $R, R$ | $2.$ $R, B$ | $3.$ $R, G$ | $4.$ $B, G$ |\n\n-   Therefore, replacement, order, and distinguishability are important factors to consider when counting the number of ways to arrange objects from a set.\n\n## Multiplication principle\n\n-   Assume that we are performing different random experiments, and each experiment has $n_1, n_2, \\ldots, n_k$ possible outcomes, respectively.\n\n-   The multiplication principle states that the total number of outcomes for the combined experiments is the product of the number of outcomes for each individual experiment:\n\n$$\n\\text{Total number of outcomes} = n_1 \\times n_2 \\times \\ldots \\times n_k\n$$\n\n::: panel-tabset\n## Example C.3.1 {{< iconify ic:round-menu-book size=21px >}}\n\n-   A company requires its employees to create a password for their computer accounts. The password must follow these rules:\n\n    -   It must be exactly 8 characters long.\n\n    -   The first character must be a special character (from a set of 7 allowed special characters).\n\n    -   The second character must be a digit (from 0 to 9).\n\n    -   The remaining 6 characters can be any combination of letters (case-sensitive).\n\n[How many possible passwords can be created following these rules?]{color=\"#ba181b\"}\n\n-   **Answer**:\n\n    -   The first character can be selected in $7$ ways.\n\n    -   The second character can be selected in $10$ ways.\n\n    -   The remaining $6$ characters can be selected in $52$ ways each (this is because there are $26$ uppercase and $26$ lowercase letters in the English alphabet).\n\n    -   Therefore, the total number of possible passwords is:\n\n    $$\n    7 \\times 10 \\times 52 \\times 52 \\times 52 \\times 52 \\times 52 \\times 52 = \n    $$\n\n    $$\n    7 \\times 10 \\times 52^6 = 1,383,942,676,480 \n    $$\n:::\n\n## Permutations\n\n-   A permutation is an arrangement of objects in a **specific order (i.e., order matters)**.\n\n-   For a set of $n$ objects, each **unique arrangement** of $r$ objects is called a permutation, where $r \\leq n$.\n\n### Permutations of distinguishable objects\n\n#### Without replacement\n\n-   Suppose we have a set of three **distinguishable** balls, one [red]{fg=\"white\" bg=\"red\"}, one [blue]{fg=\"white\" bg=\"#0171c3\"}, and one [green]{fg=\"white\" bg=\"green\"}.\n\n-   We are interested in finding the number of ways to arrange the three balls.\n\n    ![](/images/perm_no_repl1.jpg){width=\"481\"}\n\n-   As shown in the figure, there are $6$ unique ways to arrange the three balls.\n\n-   For the first ball, there are $3$ available choices.\n\n-   For the second ball, there are $2$ choices left.\n\n-   For the third ball, there is only $1$ choice left.\n\n-   Using the multiplication principle, the total number of unique arrangements (permutations) is calculated by multiplying the number of choices for each slot: $3 \\times 2 \\times 1 = 6$.\n\n##### Formula\n\n-   The above rule can be generalized as follows:\n\n    [{{< iconify emojione-monotone:letter-a size=20px fill=blue >}}]{style=\"color: dodgerblue\"} When filling $n$ slots with $n$ objects without replacement:\n\n    -   The number of unique arrangements (permutations) of $n$ distinguishable objects is given as:\n\n        $$\n        n \\times (n-1) \\times (n-2) \\times \\ldots \\times 3 \\times 2 \\times 1 = n!\n        $$\n\n    -   The term $n!$ is read as $n$ factorial and is defined as the product of all positive integers from $1$ up to $n$.\n\n    -   This can be written in mathematical notation as:\n\n    $$\n    _nP_n=n\\times (n-1)\\times (n-2) \\times \\ldots \\times 1=n!\n    $$\n\n    -   $_nP_n$ is read as permutation of $n$ objects taken $n$ at a time, where the first $n$ is the total number of objects and the second $n$ is the number of objects to be arranged.\n\n    [{{< iconify emojione-monotone:letter-b size=20px fill=blue >}}]{style=\"color: dodgerblue\"} When filling $r$ slots from $n$ objects without replacement, where $r < n$:\n\n    -   The number of unique arrangements (permutations) of $r$ distinguishable objects is given as:\n\n        $$\n        n \\times (n-1) \\times (n-2) \\times \\ldots \\times [n-(r-1)]\n        $$\n\n    -   There are $n$ choices for the first slot, $(n-1)$ choices for the second slot, and so on until the last slot that has always $[n-(r-1)]$ choices left.\n\n    -   This can be written in mathematical notation as:\n\n    $$\n    _nP_r=n\\times (n-1)\\times (n-2) \\times \\ldots \\times [n-(r-1)] = \\frac{n!}{(n-r)!}\n    $$\n\n    ::: {.callout-note style=\"color: #0466c8;\" title=\"Proof\"}\n    $n\\times (n-1)\\times (n-2) \\times \\ldots \\times [n-(r-1)] =$\n\n    $n\\times (n-1)\\times (n-2) \\times \\ldots \\times (n-r+1) \\xRightarrow{\\text{multiply by}}$\n\n    $\\frac{(n-r) \\times (n-r-1) \\times \\ldots \\times 2 \\times 1}{(n-r) \\times (n-r-1) \\times \\ldots \\times 2 \\times 1} \\xRightarrow{\\text{this becomes}}$\n\n    $\\frac{n\\times (n-1)\\times (n-2) \\times \\ldots \\times (n-r+1) \\times (n-r) \\times (n-r-1) \\times \\ldots \\times 2 \\times 1}{(n-r) \\times (n-r-1) \\times \\ldots \\times 2 \\times 1}\\xRightarrow{\\text{reduces to}}\\displaystyle \\frac{n!}{(n-r)!}$\n    :::\n\n    -   $_nP_r$ reads as permutation of $n$ objects taken $r$ at a time, where the first $n$ is the total number of objects and $r$ is the number of objects to be arranged.\n\n::: {.callout-note style=\"color: #0466c8;\"}\n-   When $r = n$, the formula $\\displaystyle \\frac{n!}{(n-r)!}$ reduces to $n!$.\n\n-   $0! = 1$ by definition or convention.\n:::\n\n##### Calculation in R\n\n-   The factorial of a number can be calculated in R using the `factorial()` function.\n\n-   $4!$:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    factorial(4)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 24\n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n-   $5!$:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    factorial(5)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 120\n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n-   $0!$:\n\n\n\n\n    ::: {.cell}\n    \n    ```{.r .cell-code}\n    factorial(0)\n    ```\n    \n    ::: {.cell-output .cell-output-stdout}\n    \n    ```\n    [1] 1\n    ```\n    \n    \n    :::\n    :::\n\n\n\n\n::: panel-tabset\n## Example C.3.2 {{< iconify ic:round-menu-book size=21px >}}\n\n[{{< iconify bi:1-circle-fill size=20px >}}]{style=\"color: #e63946\"} In how many unique ways can we arrange the letters from **A** to **F** without replacement?\n\n[{{< iconify bi:2-circle-fill size=20px >}}]{style=\"color: #e63946\"} In how many unique ways can we select $4$ letters from **A** to **F** without replacement?\n\n**Answer**:\n\nThere are a total of $6$ **distinguishable** letters.\n\n[{{< iconify bi:1-circle-fill size=20px >}}]{style=\"color: dodgerblue\"} The unique arrangements (permutations) of $6$ letters taken $6$ at a time is $_6P_6 = 6! = 720$\n\n[{{< iconify bi:2-circle-fill size=20px >}}]{style=\"color: dodgerblue\"} The unique arrangements (permutations) of $6$ letters taken $4$ at a time is $_6P_4 = \\displaystyle \\frac{6!}{(6-4)!} = 360$\n:::\n\n### Permutations with replacement\n\n-   Consider the example of the three balls (one [red]{fg=\"white\" bg=\"red\"}, one [red]{fg=\"white\" bg=\"blue\"}, and one [red]{fg=\"white\" bg=\"green\"}) that we discussed above.\n\n-   Now, we want to arrange the three balls but with replacement.\n\n-   This means that after each draw, the ball is put back in the box and is available for the next draw.\n\n-   For the first slot, there are $3$ choices.\n\n-   For the second slot, there are $3$ choices because the first ball is put back in the box and is available for the next draw.\n\n-   For the third slot, there are $3$ choices as well.\n\n-   So, the total number of unique arrangements (permutations) with replacement is $3 \\times 3 \\times 3 = 27$.\n\n#### Formula\n\n-   This can be generalized as follows:\n\n    -   The number of unique arrangements (permutations) of $n$ **distinguishable** objects **with replacement** is given as:\n\n        $$\n        n^r\n        $$\n\n    -   $n$ is the total number of objects and $r$ is the number of objects to be arranged and $r \\leq n$.\n\n::: panel-tabset\n## Example C.3.3 {{< iconify ic:round-menu-book size=21px >}}\n\n[{{< iconify bi:1-circle-fill size=20px >}}]{style=\"color: #e63946\"} In how many unique ways can you arrange the letters from **A** to **F** with replacement?\n\n[{{< iconify bi:2-circle-fill size=20px >}}]{style=\"color: #e63946\"} In how many unique ways can you select $4$ letters from **A** to **F** with replacement?\n\n**Answer**\n\n[{{< iconify bi:1-circle-fill size=20px >}}]{style=\"color: dodgerblue\"} We can use the formula $n^r$, where $n=6$ and $r=6$. So, the number of permutations with replacement is $6^6 = 46,656$\n\n[{{< iconify bi:2-circle-fill size=20px >}}]{style=\"color: dodgerblue\"} We can use the formula $n^r$, where $n=6$ and $r=4$. So, the number of permutations with replacement is $6^4 = 1,296$\n:::\n\n\n\n### Permutations of indistinguishable objects\n\n-   Suppose we have a set of three **indistinguishable** [red]{fg=\"white\" bg=\"red\"} balls.\n\n-   We are interested in finding the number of ways to arrange the three balls.\n\n    ![](/images/perm_no_repl2.jpg){width=\"481\"}\n\n-   As shown in the figure, there is only $1$ way to arrange the three balls because they are indistinguishable and can be swapped without changing the arrangement (i.e., swapping positions does not create any new unique arrangement).\n\n-   There is only $1$ way to arrange the three indistinguishable balls regardless the draw is with or without replacement.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}